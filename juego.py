import streamlit as st
import random
import re

def generar_numero_secreto():
    """Genera un n√∫mero secreto aleatorio de 4 d√≠gitos."""
    return str(random.randint(1000, 9999))

def app():
    st.title("üî¢ Adivina el N√∫mero Secreto con Regex üî¢")

    # Instrucciones del juego
    st.write("""
    **Instrucciones:**
    1. Se te dar√° un n√∫mero secreto de 4 d√≠gitos.
    2. Tienes que adivinar el n√∫mero secreto utilizando expresiones regulares.
    3. Cada vez que intentes, el juego te dar√° pistas sobre el n√∫mero.
    4. Si el n√∫mero que introduces es correcto, ganar√°s el juego.
    
    ¬°Buena suerte!
    """)

    # Inicializar el juego
    if 'intentos' not in st.session_state:
        st.session_state.intentos = 0
        st.session_state.numero_secreto = generar_numero_secreto()
        st.session_state.adivinada = False

    # Solicitar el patr√≥n regex
    regex = st.text_input("Escribe una expresi√≥n regular para adivinar el n√∫mero secreto:")

    # Bot√≥n para comprobar el regex
    if st.button("Comprobar Regex"):
        st.session_state.intentos += 1

        # Verificar si el patr√≥n coincide con el n√∫mero secreto
        try:
            if re.match(regex, st.session_state.numero_secreto):
                st.success(f"üéâ ¬°Correcto! El n√∫mero secreto es {st.session_state.numero_secreto}.")
                st.session_state.adivinada = True
            else:
                st.warning(f"No es correcto. Intenta con otro patr√≥n. Intentos: {st.session_state.intentos}")
                
                # Dar pistas basadas en la longitud o el valor del n√∫mero
                if len(regex) > len(st.session_state.numero_secreto):
                    st.write("Pista: El n√∫mero es m√°s corto que tu intento.")
                elif len(regex) < len(st.session_state.numero_secreto):
                    st.write("Pista: El n√∫mero es m√°s largo que tu intento.")
                
                # Pistas adicionales para hacer el juego m√°s f√°cil
                if st.session_state.numero_secreto[0] == regex[0]:
                    st.write("Pista: El primer d√≠gito del n√∫mero es correcto.")
                if st.session_state.numero_secreto[-1] == regex[-1]:
                    st.write("Pista: El √∫ltimo d√≠gito del n√∫mero es correcto.")
                if regex.count(r"\d") == 4:
                    st.write("Pista: Est√°s buscando un n√∫mero de 4 d√≠gitos.")
                
        except re.error:
            st.error("¬°Expresi√≥n regular inv√°lida! Aseg√∫rate de escribir una expresi√≥n v√°lida.")

    # Mostrar el n√∫mero de intentos
    st.write(f"Intentos realizados: {st.session_state.intentos}")

    # Si adivin√≥ el n√∫mero, permitir reiniciar el juego
    if st.session_state.adivinada:
        if st.button("Jugar de nuevo"):
            st.session_state.intentos = 0
            st.session_state.numero_secreto = generar_numero_secreto()
            st.session_state.adivinada = False
            st.experimental_rerun()

    # Cr√©ditos
    st.write("---")
    st.write("Programado por **Kevin Guio**")

if __name__ == "__main__":
    app()
