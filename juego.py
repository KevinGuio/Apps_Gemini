import streamlit as st
import random
import re

def generar_numero_secreto():
    """Genera un n칰mero secreto aleatorio de 4 d칤gitos."""
    return str(random.randint(1000, 9999))

def comparar_numero(usuario, secreto):
    """Compara el n칰mero del usuario con el n칰mero secreto y genera las pistas."""
    pista = []
    usado_secreto = [False] * len(secreto)  # Para marcar qu칠 d칤gitos ya han sido usados en el n칰mero secreto

    # Primero, se marca con verde los d칤gitos en la posici칩n correcta
    for i, digito in enumerate(usuario):
        if digito == secreto[i]:
            pista.append(f"<span style='color:green'>{digito}</span>")  # N칰mero en la posici칩n correcta (verde)
            usado_secreto[i] = True  # Marcamos el d칤gito como usado

    # Luego, se marca con amarillo los n칰meros que est치n en la secuencia pero en la posici칩n incorrecta
    for i, digito in enumerate(usuario):
        if digito != secreto[i] and digito in secreto:
            # Asegurarse de que el d칤gito no se haya marcado como usado anteriormente
            for j in range(len(secreto)):
                if digito == secreto[j] and not usado_secreto[j]:
                    pista[i] = f"<span style='color:yellow'>{digito}</span>"  # N칰mero en la secuencia pero en lugar incorrecto (amarillo)
                    usado_secreto[j] = True  # Marcamos ese d칤gito como usado
                    break
            else:
                # Si no se puede marcar, es porque ya est치 en otro lugar
                if pista[i] == "":
                    pista.append(f"<span>{digito}</span>")  # Sin color

    # Finalmente, los n칰meros que no est치n en la secuencia no se colorean
    for i, digito in enumerate(usuario):
        if digito != secreto[i] and digito not in secreto and pista[i] == "":
            pista[i] = f"<span>{digito}</span>"  # N칰mero no est치 en la secuencia (sin color)

    return "".join(pista)

def app():
    st.title("游댝 Adivina el N칰mero Secreto con Regex 游댝")

    # Instrucciones del juego
    st.write("""
    **Instrucciones:**
    1. Se te dar치 un n칰mero secreto de 4 d칤gitos.
    2. Tienes que adivinar el n칰mero secreto utilizando una expresi칩n regular.
    3. Cada vez que intentes, el juego te dar치 pistas sobre el n칰mero: verde indica que el n칰mero est치 en la posici칩n correcta, amarillo indica que el n칰mero est치 en la secuencia pero no en la posici칩n correcta.
    4. Si el n칰mero que introduces es correcto, ganar치s el juego.
    
    춰Buena suerte!
    """)

    # Inicializar el juego
    if 'intentos' not in st.session_state:
        st.session_state.intentos = 0
        st.session_state.numero_secreto = generar_numero_secreto()
        st.session_state.adivinada = False

    # Solicitar el patr칩n regex
    regex = st.text_input("Escribe una expresi칩n regular para adivinar el n칰mero secreto:")

    # Bot칩n para comprobar el regex
    if st.button("Comprobar Regex"):
        st.session_state.intentos += 1

        # Verificar si el patr칩n coincide con el n칰mero secreto
        try:
            if re.match(regex, st.session_state.numero_secreto):
                st.success(f"游꿀 춰Correcto! El n칰mero secreto es {st.session_state.numero_secreto}.")
                st.session_state.adivinada = True
            else:
                st.warning(f"No es correcto. Intenta con otro patr칩n. Intentos: {st.session_state.intentos}")

                # Comparar el intento con el n칰mero secreto y mostrar pistas interactivas
                pistas = comparar_numero(regex, st.session_state.numero_secreto)
                st.markdown(f"**Pistas:** {pistas}", unsafe_allow_html=True)

        except re.error:
            st.error("춰Expresi칩n regular inv치lida! Aseg칰rate de escribir una expresi칩n v치lida.")

    # Mostrar el n칰mero de intentos
    st.write(f"Intentos realizados: {st.session_state.intentos}")

    # Si adivin칩 el n칰mero, permitir reiniciar el juego
    if st.session_state.adivinada:
        if st.button("Jugar de nuevo"):
            # Restablecer las variables de estado para iniciar un nuevo juego
            st.session_state.intentos = 0
            st.session_state.numero_secreto = generar_numero_secreto()
            st.session_state.adivinada = False
            # No es necesario hacer rerun; solo se reinicia el estado del juego.

    # Cr칠ditos
    st.write("---")
    st.write("Programado por **Kevin Guio**")

if __name__ == "__main__":
    app()
